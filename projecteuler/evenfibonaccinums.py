# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Gameplan
# Keep adding fibonacci numbers to an array as long as the most previous doesn't exceed 4M

arrHolder = [1, 2] # Holds values we've gone through
fibHolder = [] # Holds values to sum
maxNum = 4_000_000

def fibFinder():
    while arrHolder[-1] <= maxNum:
        arrHolder.append(arrHolder[-1]+arrHolder[-2])
    
    if arrHolder[-1] > maxNum:
        arrHolder.pop()

    for i in arrHolder:
        if i % 2 == 0:
            fibHolder.append(i)
            
    return(sum(fibHolder))
# 4613732
    
print(fibFinder())

            

